\BOOKMARK [0][-]{section*.1}{Contents}{}% 1
\BOOKMARK [0][-]{chapter.1}{Introduction}{}% 2
\BOOKMARK [1][-]{section.1.1}{Motivation}{chapter.1}% 3
\BOOKMARK [0][-]{chapter.2}{Background Material}{}% 4
\BOOKMARK [1][-]{section.2.1}{Parsing expression grammar}{chapter.2}% 5
\BOOKMARK [2][-]{subsection.2.1.1}{Context Free Grammar}{section.2.1}% 6
\BOOKMARK [2][-]{subsection.2.1.2}{PEG}{section.2.1}% 7
\BOOKMARK [2][-]{subsection.2.1.3}{Parsing}{section.2.1}% 8
\BOOKMARK [1][-]{section.2.2}{Autumn Parsing Library}{chapter.2}% 9
\BOOKMARK [2][-]{subsection.2.2.1}{Context sensitivity}{section.2.2}% 10
\BOOKMARK [2][-]{subsection.2.2.2}{Principled Stateful Parsing}{section.2.2}% 11
\BOOKMARK [1][-]{section.2.3}{Implementation}{chapter.2}% 12
\BOOKMARK [2][-]{subsection.2.3.1}{Important classes}{section.2.3}% 13
\BOOKMARK [0][-]{chapter.3}{Overview of the solution}{}% 14
\BOOKMARK [1][-]{section.3.1}{Overview}{chapter.3}% 15
\BOOKMARK [2][-]{subsection.3.1.1}{Why not a ``normal'' debuger ?}{section.3.1}% 16
\BOOKMARK [2][-]{subsection.3.1.2}{Difficulties of grammar development}{section.3.1}% 17
\BOOKMARK [1][-]{section.3.2}{Functionality}{chapter.3}% 18
\BOOKMARK [1][-]{section.3.3}{Intellij plugin}{chapter.3}% 19
\BOOKMARK [2][-]{subsection.3.3.1}{Views}{section.3.3}% 20
\BOOKMARK [2][-]{subsection.3.3.2}{Filtering the informations}{section.3.3}% 21
\BOOKMARK [2][-]{subsection.3.3.3}{Jump to code}{section.3.3}% 22
\BOOKMARK [0][-]{chapter.4}{Implementation}{}% 23
\BOOKMARK [1][-]{section.4.1}{The debuging tool implementation}{chapter.4}% 24
\BOOKMARK [2][-]{subsection.4.1.1}{Overview of the structure}{section.4.1}% 25
\BOOKMARK [2][-]{subsection.4.1.2}{Hooking into the parsers implementation}{section.4.1}% 26
\BOOKMARK [2][-]{subsection.4.1.3}{Rewritting the grammar, the notion of model and model Compiler}{section.4.1}% 27
\BOOKMARK [2][-]{subsection.4.1.4}{Syntax Tree generation}{section.4.1}% 28
\BOOKMARK [2][-]{subsection.4.1.5}{Debug logic and syntax nodes}{section.4.1}% 29
\BOOKMARK [1][-]{section.4.2}{Plugin Implementation}{chapter.4}% 30
\BOOKMARK [2][-]{subsection.4.2.1}{Event Handler \046 Message passing}{section.4.2}% 31
\BOOKMARK [2][-]{subsection.4.2.2}{Limitations}{section.4.2}% 32
\BOOKMARK [2][-]{subsection.4.2.3}{execution thread}{section.4.2}% 33
\BOOKMARK [0][-]{chapter.5}{Future work}{}% 34
\BOOKMARK [1][-]{section.5.1}{Debugger extension}{chapter.5}% 35
\BOOKMARK [2][-]{subsection.5.1.1}{Adding hooks}{section.5.1}% 36
\BOOKMARK [2][-]{subsection.5.1.2}{Turning the plugin into a full fledge independent software}{section.5.1}% 37
\BOOKMARK [2][-]{subsection.5.1.3}{Working in tandem with the general purpose debugger}{section.5.1}% 38
\BOOKMARK [1][-]{section.5.2}{Autumn related}{chapter.5}% 39
\BOOKMARK [2][-]{subsection.5.2.1}{Parser implementation}{section.5.2}% 40
\BOOKMARK [1][-]{section.5.3}{GUI extentions}{chapter.5}% 41
\BOOKMARK [0][-]{chapter.6}{validation}{}% 42
\BOOKMARK [1][-]{section.6.1}{Benchmarking}{chapter.6}% 43
\BOOKMARK [2][-]{subsection.6.1.1}{Profiling excution time}{section.6.1}% 44
\BOOKMARK [2][-]{subsection.6.1.2}{Profiling memory consumption}{section.6.1}% 45
\BOOKMARK [1][-]{section.6.2}{Debugger in practice}{chapter.6}% 46
\BOOKMARK [2][-]{subsection.6.2.1}{Examples}{section.6.2}% 47
\BOOKMARK [0][-]{chapter.7}{Related work - state of the art}{}% 48
\BOOKMARK [1][-]{section.7.1}{The Moldable Debugger: a Framework for Developing Domain-Specific Debuggers}{chapter.7}% 49
\BOOKMARK [1][-]{section.7.2}{Antlr antlr}{chapter.7}% 50
\BOOKMARK [1][-]{section.7.3}{Ohm}{chapter.7}% 51
\BOOKMARK [1][-]{section.7.4}{Debugger Canvas: Industrial Experience with the Code Bubbles Paradigm}{chapter.7}% 52
\BOOKMARK [1][-]{section.7.5}{Grammar-Driven Generation of Domain-Specific Language Debuggers}{chapter.7}% 53
\BOOKMARK [0][-]{section*.38}{Bibliography}{}% 54
